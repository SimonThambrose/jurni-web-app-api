// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jurni_web_app_api.Data;

#nullable disable

namespace jurni_web_app_api.Migrations
{
    [DbContext(typeof(jurni_web_app_apiDbContext))]
    [Migration("20230521131226_initial_migration")]
    partial class initial_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.ContactRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("IsEnterprisePlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ContactRequests");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Plans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Limited to 10 matches per day.",
                            Name = "Free",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Limited to 50 matches per day, with additional features.",
                            Name = "Basic",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Unlimited matches per day, with additional features and support.",
                            Name = "Premium",
                            Price = 20.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Unlimited matches per day, with additional features and support. Response within 72 hours.",
                            Name = "Enterprise"
                        });
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 21, 15, 12, 26, 230, DateTimeKind.Local).AddTicks(2306),
                            Email = "johnj@jurni.nl",
                            FirstName = "John",
                            IsAdmin = true,
                            LastName = "Johnson",
                            PasswordHash = new byte[] { 191, 19, 161, 9, 90, 5, 4, 217, 37, 240, 147, 26, 18, 163, 170, 10, 247, 180, 55, 66, 32, 71, 184, 254, 255, 64, 60, 202, 63, 93, 247, 122, 230, 3, 86, 79, 253, 185, 13, 85, 210, 161, 164, 228, 35, 8, 219, 15, 108, 212, 244, 11, 237, 196, 251, 104, 88, 66, 52, 216, 76, 186, 144, 195 },
                            PasswordSalt = new byte[] { 115, 200, 173, 229, 159, 86, 184, 189, 213, 97, 57, 111, 129, 170, 141, 14, 169, 40, 93, 67, 135, 103, 79, 201, 3, 35, 179, 201, 182, 59, 229, 146, 201, 78, 134, 145, 68, 82, 131, 51, 52, 9, 169, 207, 135, 157, 176, 160, 171, 250, 224, 148, 4, 224, 80, 115, 186, 251, 157, 240, 220, 88, 149, 156, 181, 105, 87, 104, 249, 104, 238, 17, 231, 216, 157, 223, 87, 82, 79, 96, 40, 65, 209, 219, 237, 142, 163, 230, 32, 231, 13, 128, 95, 9, 95, 157, 70, 119, 38, 92, 162, 120, 106, 153, 87, 93, 109, 181, 34, 129, 115, 188, 31, 108, 171, 71, 96, 206, 102, 41, 131, 231, 246, 23, 166, 226, 175, 31 },
                            UpdatedAt = new DateTime(2023, 5, 21, 15, 12, 26, 230, DateTimeKind.Local).AddTicks(2345)
                        });
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Blog", b =>
                {
                    b.HasOne("jurni_web_app_api.Data.Entities.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.User", b =>
                {
                    b.HasOne("jurni_web_app_api.Data.Entities.Plan", "Plan")
                        .WithMany("Users")
                        .HasForeignKey("PlanId");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Plan", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.User", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
