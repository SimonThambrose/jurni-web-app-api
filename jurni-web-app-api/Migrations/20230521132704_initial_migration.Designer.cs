// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jurni_web_app_api.Data;

#nullable disable

namespace jurni_web_app_api.Migrations
{
    [DbContext(typeof(JurniWebAppApiDbContext))]
    [Migration("20230521132704_initial_migration")]
    partial class initial_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.ContactRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("IsEnterprisePlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ContactRequests");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Plans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Limited to 10 matches per day.",
                            Name = "Free",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Limited to 50 matches per day, with additional features.",
                            Name = "Basic",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Unlimited matches per day, with additional features and support.",
                            Name = "Premium",
                            Price = 20.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Unlimited matches per day, with additional features and support. Response within 72 hours.",
                            Name = "Enterprise"
                        });
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 21, 15, 27, 4, 353, DateTimeKind.Local).AddTicks(7906),
                            Email = "johnj@jurni.nl",
                            FirstName = "John",
                            IsAdmin = true,
                            LastName = "Johnson",
                            PasswordHash = new byte[] { 107, 134, 34, 167, 97, 235, 250, 196, 249, 122, 208, 198, 239, 3, 122, 36, 206, 191, 112, 158, 209, 149, 94, 247, 0, 244, 38, 219, 13, 76, 206, 211, 252, 112, 71, 24, 19, 76, 132, 73, 128, 156, 6, 123, 210, 250, 219, 168, 38, 195, 114, 174, 82, 144, 49, 173, 115, 242, 81, 210, 169, 216, 105, 4 },
                            PasswordSalt = new byte[] { 142, 189, 9, 135, 60, 120, 167, 1, 211, 80, 248, 201, 62, 149, 218, 86, 29, 242, 105, 250, 152, 158, 192, 61, 130, 151, 224, 25, 126, 206, 40, 58, 197, 56, 99, 131, 12, 151, 55, 67, 213, 43, 197, 174, 234, 149, 212, 12, 45, 68, 24, 17, 245, 115, 66, 203, 182, 186, 181, 110, 142, 135, 2, 76, 186, 55, 251, 158, 0, 3, 1, 63, 102, 23, 147, 208, 120, 229, 124, 30, 92, 137, 86, 151, 189, 101, 242, 204, 66, 93, 231, 185, 220, 58, 134, 93, 121, 220, 117, 221, 207, 205, 187, 228, 21, 143, 192, 190, 65, 63, 120, 158, 115, 87, 154, 107, 213, 231, 120, 125, 35, 96, 208, 135, 193, 98, 106, 2 },
                            UpdatedAt = new DateTime(2023, 5, 21, 15, 27, 4, 353, DateTimeKind.Local).AddTicks(7947)
                        });
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Blog", b =>
                {
                    b.HasOne("jurni_web_app_api.Data.Entities.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.User", b =>
                {
                    b.HasOne("jurni_web_app_api.Data.Entities.Plan", "Plan")
                        .WithMany("Users")
                        .HasForeignKey("PlanId");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.Plan", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("jurni_web_app_api.Data.Entities.User", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
